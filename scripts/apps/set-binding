#!/bin/bash

# Function to reset keybindings to default
reset_keybindings() {
  echo "Resetting all custom keybindings to default..."
  gsettings reset org.gnome.settings-daemon.plugins.media-keys custom-keybindings
  echo "Custom keybindings reset to default."
}

# Function to add a new custom keybinding
add_keybinding() {
  new_binding_path="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/$1/"
  # Retrieve current keybindings
  raw_bindings=$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings)
  if [[ "$raw_bindings" == "@as []" ]]; then
    updated_bindings="['${new_binding_path}']"
  else
    current_bindings=$(echo "$raw_bindings" | tr -d "[]")
    updated_bindings="[${current_bindings}, '${new_binding_path}']"
  fi
  # Update the keybindings list
  gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "$updated_bindings"

  # Set the new keybinding details
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$new_binding_path name "$2"
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$new_binding_path command "$3"
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$new_binding_path binding "$4"

  echo "New keybinding added successfully!"
  echo "Name: $2"
  echo "Command: $3"
  echo "Binding: $4"
}

# Function to list current keybindings
list_keybindings() {
  echo "Currently set custom keybindings:"
  bindings=$(gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings)
  if [[ "$bindings" == "@as []" ]]; then
    echo "No custom keybindings set."
    return
  fi
  echo "$bindings"
  echo
  echo "Details of each keybinding:"
  for binding in $(echo $bindings | sed "s/\[//;s/\]//;s/,/\n/g;s/'//g"); do
    if [[ -n "$binding" ]]; then
      name=$(gsettings get org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$binding name)
      command=$(gsettings get org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$binding command)
      binding_key=$(gsettings get org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:$binding binding)
      echo "Binding Path: $binding"
      echo "  Name: $name"
      echo "  Command: $command"
      echo "  Key: $binding_key"
      echo
    fi
  done
}

list_keyboard_keys() {
  echo "List of available keybindings:"
  echo "<Super> - Super/Windows key"
  echo "<Alt> - Alt key"
  echo "<Ctrl> - Control key"
  echo "<Shift> - Shift key"
  echo "<Alt>+<Tab> - Alt+Tab"
  echo "<Super>+<L> - Super+L"
  echo "<Super>+<R> - Super+R"
  echo "<F1> - F1 function key"
  echo "<F2> - F2 function key"
  echo "<F3> - F3 function key"
  echo "<F4> - F4 function key"
  echo "<F5> - F5 function key"
  echo "<Esc> - Escape key"
  echo "<Space> - Space key"
  echo "Return - Enter key"
  echo "<Backspace> - Backspace key"
  echo "<Delete> - Delete key"
  echo "<Home> - Home key"
  echo "<End> - End key"
  echo "<PageUp> - PageUp key"
  echo "<PageDown> - PageDown key"
  echo "<Up> - Up arrow key"
  echo "<Down> - Down arrow key"
  echo "<Left> - Left arrow key"
  echo "<Right> - Right arrow key"
  echo "<Print> - Print screen"
}
# Main script logic
# Define the JSON file path
json_file="/home/khalil/.config/keybindings.json"
if [[ "$1" == "reset" ]]; then
  reset_keybindings
elif [[ "$1" == "add" ]]; then
  if [[ -z "$2" || -z "$3" || -z "$4" || -z "$5" ]]; then
    echo "Usage: $0 add <binding_name> <keybinding_name> <command> <binding>"
    echo "Example: $0 add custom2 'Open Calculator' 'gnome-calculator' '<Super>c'"
    exit 1
  fi
  add_keybinding "$2" "$3" "$4" "$5"
elif [[ "$1" == "list" ]]; then
  list_keybindings
elif [[ "$1" == "list-keyboard" ]]; then
  list_keyboard_keys
elif [[ "$1" == "apply_all" ]]; then
  # Assuming the JSON file is keybindings.json
  # Check if the JSON file exists
  if [[ ! -f "$json_file" ]]; then
    echo "Error: $json_file does not exist."
    exit 1
  fi
  reset_keybindings
  total_items=$(jq length keybindings.json) # Get the length of the JSON array

  for i in $(seq 0 $((total_items - 1))); do
    # Extract the element at index i
    name=$(jq -r ".[$i].name" keybindings.json)
    command=$(jq -r ".[$i].command" keybindings.json)
    binding=$(jq -r ".[$i].binding" keybindings.json)

    # Call the add_keybinding function with arguments extracted from the JSON
    add_keybinding "$(echo $name | tr ' ' '_')" "$name" "$command" "$binding"
  done

  echo "All keybindings applied from keybindings.json"
else
  echo "Usage: $0 <reset|add|list|apply_all>"
  echo "To reset all custom keybindings: $0 reset"
  echo "To add a new keybinding: $0 add <binding_name> <keybinding_name> <command> <binding>"
  echo "To list all current keybindings: $0 list"
  echo "To apply all keybindings from JSON file: $0 apply_all"
  exit 1
  fielse
  echo "Usage: $0 <reset|add|list|list-keyboard> [parameters]"
  echo "To reset all custom keybindings: $0 reset"
  echo "To add a new keybinding: $0 add <binding_name> <keybinding_name> <command> <binding>"
  echo "To list all current keybindings: $0 list"
  echo "To list available keyboard keys: $0 list-keyboard"
  echo "Example: $0 add custom2 'Open Calculator' 'gnome-calculator' '<Super>c'"
  exit 1
fi
