- name: Install uv package manager
  become: true
  become_user: "{{ user }}"
  hosts: localhost
  tasks:
    - name: Install uv package manager
      ansible.builtin.shell: curl -LsSf https://astral.sh/uv/install.sh | sh

- name: Install rust toolchain
  become: true
  become_user: "{{ user }}"
  hosts: localhost
  tasks:
    - name: Install rustup
      ansible.builtin.shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

- name: Install Kitty terminal
  become: true
  become_user: "{{ user }}"
  hosts: localhost
  tasks:
    - name: Install Kitty using curl
      ansible.builtin.shell: |
        curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
      args:
        creates: "{{ home_dir }}/.local/kitty.app/bin/kitty"
    - name: Create a symlink for Kitty in ~/.local/bin
      ansible.builtin.file:
        src: "{{ home_dir }}/.local/kitty.app/bin/kitty"
        dest: "{{ home_dir }}/.local/bin/kitty"
        state: link
    - name: Create symlink for the 'kitten' in ~/.local/bin
      ansible.builtin.file:
        src: "{{ home_dir }}/.local/kitty.app/bin/kitten"
        dest: "{{ home_dir }}/.local/bin/kitten"
        state: link

- name: install ZSH
  hosts: localhost
  become: True
  tasks:
    - name: Install zsh
      ansible.builtin.package:
        name: zsh
        state: present
    - name: Check if zsh is already the default shell
      ansible.builtin.shell: echo $SHELL
      register: current_shell
    - name: Change default shell to zsh
      ansible.builtin.command:
        cmd: chsh -s /bin/zsh {{ user }}
      when: current_shell.stdout != "/bin/zsh"

- name: install OMZSH
  hosts: localhost
  become: True
  become_user: "{{ user }}"
  tasks:
    - name: Install Oh My Zsh
      ansible.builtin.shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        executable: /bin/bash
    - name: Remove .zshrc
      ansible.builtin.file:
        path: "{{ home_dir }}/.zshrc"
        state: absent

- name: Install Tmux Plugin Manager (TPM)
  hosts: localhost
  become_user: "{{ user }}"
  become: True
  tasks:
    - name: Ensure ~/.tmux/plugins directory exists
      file:
        path: "{{ ansible_env.HOME }}/.tmux/plugins"
        state: directory
        mode: "0755"

    - name: Clone the TPM repository
      git:
        repo: "https://github.com/tmux-plugins/tpm"
        dest: "{{ home_dir }}/.tmux/plugins/tpm"

- name: Install Evalcache Zsh Plugin
  hosts: localhost
  become_user: "{{ user }}"
  become: True
  vars:
    zsh_custom_path: "{{ home_dir }}/.oh-my-zsh/custom"
  tasks:
    - name: Ensure Zsh custom plugins directory exists
      file:
        path: "{{ zsh_custom_path }}/plugins"
        state: directory
        mode: "0755"
    - name: Clone the Evalcache repository
      git:
        repo: "https://github.com/mroth/evalcache"
        dest: "{{ zsh_custom_path }}/plugins/evalcache"

- name: Install Docker and configure non-root user access
  hosts: localhost
  become: true
  tasks:
    - name: Download Docker installation script
      shell: |
        curl -fssl https://get.docker.com -o get-docker.sh
    - name: Execute Docker installation script
      shell: |
        sh get-docker.sh
    - name: Add user to the docker group
      become_user: "{{ user }}"
      become: True
      shell: |
        dockerd-rootless-setuptool.sh install
